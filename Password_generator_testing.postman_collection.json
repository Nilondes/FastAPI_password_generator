{
	"info": {
		"_postman_id": "464e806d-b3cc-4cb1-baa3-ad719835c7cf",
		"name": "Password_generator_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46498813"
	},
	"item": [
		{
			"name": "Test 10-long all true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Password has correct length\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.password.length).to.equal(10);",
							"});",
							"",
							"pm.test(\"Password contains all required character types\", function () {",
							"    const password = pm.response.json().password;",
							"    ",
							"    const hasLowercase = /[a-z]/.test(password);",
							"    const hasUppercase = /[A-Z]/.test(password);",
							"    const hasDigits = /[0-9]/.test(password);",
							"    const hasSpecial = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?\\/]/.test(password);",
							"    ",
							"    pm.expect(hasLowercase, \"Missing lowercase letters\").to.be.true;",
							"    pm.expect(hasUppercase, \"Missing uppercase letters\").to.be.true;",
							"    pm.expect(hasDigits, \"Missing digits\").to.be.true;",
							"    pm.expect(hasSpecial, \"Missing special characters\").to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=10&use_special=true&use_lowercase=true&use_uppercase=true&use_digits=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "10"
						},
						{
							"key": "use_special",
							"value": "true"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						},
						{
							"key": "use_uppercase",
							"value": "true"
						},
						{
							"key": "use_digits",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 11-long lower,upper,special",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Password has correct length\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.password.length).to.equal(11);",
							"});",
							"",
							"pm.test(\"Password contains all required character types\", function () {",
							"    const password = pm.response.json().password;",
							"    ",
							"    const hasLowercase = /[a-z]/.test(password);",
							"    const hasUppercase = /[A-Z]/.test(password);",
							"    const hasDigits = /[0-9]/.test(password);",
							"    const hasSpecial = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?\\/]/.test(password);",
							"    ",
							"    pm.expect(hasLowercase, \"Missing lowercase letters\").to.be.true;",
							"    pm.expect(hasUppercase, \"Missing uppercase letters\").to.be.true;",
							"    pm.expect(hasDigits, \"Missing digits\").to.be.false;",
							"    pm.expect(hasSpecial, \"Missing special characters\").to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=11&use_special=true&use_lowercase=true&use_uppercase=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "11"
						},
						{
							"key": "use_special",
							"value": "true"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						},
						{
							"key": "use_uppercase",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 9-long lower,special Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Password has correct length\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.password.length).to.equal(9);",
							"});",
							"",
							"pm.test(\"Password contains all required character types\", function () {",
							"    const password = pm.response.json().password;",
							"    ",
							"    const hasLowercase = /[a-z]/.test(password);",
							"    const hasUppercase = /[A-Z]/.test(password);",
							"    const hasDigits = /[0-9]/.test(password);",
							"    const hasSpecial = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?\\/]/.test(password);",
							"    ",
							"    pm.expect(hasLowercase, \"Missing lowercase letters\").to.be.true;",
							"    pm.expect(hasUppercase, \"Missing uppercase letters\").to.be.false;",
							"    pm.expect(hasDigits, \"Missing digits\").to.be.false;",
							"    pm.expect(hasSpecial, \"Missing special characters\").to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=9&use_special=true&use_lowercase=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "9"
						},
						{
							"key": "use_special",
							"value": "true"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 8-long lower",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Password has correct length\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.password.length).to.equal(8);",
							"});",
							"",
							"pm.test(\"Password contains all required character types\", function () {",
							"    const password = pm.response.json().password;",
							"    ",
							"    const hasLowercase = /[a-z]/.test(password);",
							"    const hasUppercase = /[A-Z]/.test(password);",
							"    const hasDigits = /[0-9]/.test(password);",
							"    const hasSpecial = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?\\/]/.test(password);",
							"    ",
							"    pm.expect(hasLowercase, \"Missing lowercase letters\").to.be.true;",
							"    pm.expect(hasUppercase, \"Missing uppercase letters\").to.be.false;",
							"    pm.expect(hasDigits, \"Missing digits\").to.be.false;",
							"    pm.expect(hasSpecial, \"Missing special characters\").to.be.false;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=8&use_lowercase=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "8"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 4-long all true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 422\", () => pm.response.to.have.status(422));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=4&use_special=true&use_lowercase=true&use_uppercase=true&use_digits=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "4"
						},
						{
							"key": "use_special",
							"value": "true"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						},
						{
							"key": "use_uppercase",
							"value": "true"
						},
						{
							"key": "use_digits",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 10-long all false",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 400\", () => pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test 101-long all true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 422\", () => pm.response.to.have.status(422));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator?length=101&use_special=true&use_lowercase=true&use_uppercase=true&use_digits=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator"
					],
					"query": [
						{
							"key": "length",
							"value": "101"
						},
						{
							"key": "use_special",
							"value": "true"
						},
						{
							"key": "use_lowercase",
							"value": "true"
						},
						{
							"key": "use_uppercase",
							"value": "true"
						},
						{
							"key": "use_digits",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check very weak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Entropy is very low\", function () {",
							"    const entropy = pm.response.json().entropy;",
							"    pm.expect(entropy).to.be.below(38);",
							"});",
							"",
							"pm.test(\"Password strength is 'very weak'\", function () {",
							"    const strength = pm.response.json().strength;",
							"    pm.expect(strength).to.equal(\"very weak\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator/check?password=password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator",
						"check"
					],
					"query": [
						{
							"key": "password",
							"value": "password"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check weak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Entropy is very low\", function () {",
							"    const entropy = pm.response.json().entropy;",
							"    pm.expect(entropy).to.be.below(46);",
							"});",
							"",
							"pm.test(\"Password strength is 'very weak'\", function () {",
							"    const strength = pm.response.json().strength;",
							"    pm.expect(strength).to.equal(\"weak\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator/check?password=Password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator",
						"check"
					],
					"query": [
						{
							"key": "password",
							"value": "Password"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check medium",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Entropy is very low\", function () {",
							"    const entropy = pm.response.json().entropy;",
							"    pm.expect(entropy).to.be.below(60);",
							"});",
							"",
							"pm.test(\"Password strength is 'very weak'\", function () {",
							"    const strength = pm.response.json().strength;",
							"    pm.expect(strength).to.equal(\"medium\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator/check?password=Password1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator",
						"check"
					],
					"query": [
						{
							"key": "password",
							"value": "Password1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check strong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Entropy is very low\", function () {",
							"    const entropy = pm.response.json().entropy;",
							"    pm.expect(entropy).to.be.below(128);",
							"});",
							"",
							"pm.test(\"Password strength is 'very weak'\", function () {",
							"    const strength = pm.response.json().strength;",
							"    pm.expect(strength).to.equal(\"strong\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator/check?password=Password1@",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator",
						"check"
					],
					"query": [
						{
							"key": "password",
							"value": "Password1@"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check very strong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
							"",
							"pm.test(\"Entropy is very low\", function () {",
							"    const entropy = pm.response.json().entropy;",
							"    pm.expect(entropy).to.be.above(128);",
							"});",
							"",
							"pm.test(\"Password strength is 'very weak'\", function () {",
							"    const strength = pm.response.json().strength;",
							"    pm.expect(strength).to.equal(\"very strong\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/generator/check?password=Pas%s4word1@3adsfG$dv",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"generator",
						"check"
					],
					"query": [
						{
							"key": "password",
							"value": "Pas%s4word1@3adsfG$dv"
						}
					]
				}
			},
			"response": []
		}
	]
}